--[[
    Script: WalvyXploit GUI for Grow a Garden
    Version: 4.2 (Game-Specific Feature: Peek Eggs)
    Author: Walvy
    Description: Adds a feature to the free menu to peek inside eggs in "Grow a Garden".
]]

--================================================================--
-- Service and Module Imports
--================================================================--

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")

--================================================================--
-- Configuration
--================================================================--

local CONFIG = {
    DISCORD_INVITE_LINK = "https://discord.gg/your-invite-link",
    GUI_NAME = "WalvyXploitGui",
    REOPEN_BUTTON_IMAGE = "rbxassetid://138368756406672",
    NOTIFICATION_DURATION = 3,
    -- Game-specific assumptions
    EGG_FOLDER_NAME = "Eggs", -- Assuming eggs are in Workspace.Eggs
    EGG_DATA_PATH = "GameData.Eggs" -- Assuming data is in ReplicatedStorage.GameData.Eggs
}

--================================================================--
-- Helper Functions
--================================================================--

local function safeSetClipboard(text) if typeof(setclipboard) == "function" then pcall(setclipboard, text) else warn("WalvyXploit: 'setclipboard' is not available.") end end
local function createCorner(parent, radius) local corner = Instance.new("UICorner"); corner.CornerRadius = UDim.new(0, radius); corner.Parent = parent; end

--================================================================--
-- Main Application Module
--================================================================--

local App = {}
App.__index = App

function App.new()
    local self = setmetatable({}, App)
    self.lastActiveMenu = nil
    self.reopenButton = nil
    self.localPlayer = Players.LocalPlayer

    if not self.localPlayer then warn("WalvyXploit: Could not find LocalPlayer.") return nil end
    local playerGui = self.localPlayer:WaitForChild("PlayerGui")
    if not playerGui then warn("WalvyXploit: Could not find PlayerGui.") return nil end

    self.screenGui = Instance.new("ScreenGui")
    self.screenGui.Name = CONFIG.GUI_NAME
    self.screenGui.ResetOnSpawn = false
    self.screenGui.DisplayOrder = 999
    self.screenGui.Parent = playerGui

    self:_setupUI()

    print("WalvyXploit GUI Loaded (v4.2).")
    return self
end

function App:_setupUI()
    local menuSelection = self:_createMenuSelection()
    local discordBanner = self:_createDiscordBanner()

    menuSelection.frame.Visible = true
    discordBanner.frame.Visible = true

    menuSelection.freeButton.MouseButton1Click:Connect(function()
        menuSelection.frame:Destroy()
        discordBanner.frame:Destroy()
        self.lastActiveMenu = self:_createMenuBase("Free Menu")
        self:_showNotification("Free Menu Loaded")
    end)

    menuSelection.premiumButton.MouseButton1Click:Connect(function()
        menuSelection.frame:Destroy()
        discordBanner.frame:Destroy()
        self.lastActiveMenu = self:_createMenuBase("Premium Menu")
        self:_showNotification("Premium Menu Loaded")
    end)

    discordBanner.link.MouseButton1Click:Connect(function()
        safeSetClipboard(CONFIG.DISCORD_INVITE_LINK)
        discordBanner.frame:Destroy()
    end)
end

--================================================================--
-- Game-Specific Logic
--================================================================--

--- Peeks into eggs and displays their contents.
function App:_peekEggsFeature(parentMenu)
    -- Find all egg models in the workspace
    local eggFolder = Workspace:FindFirstChild(CONFIG.EGG_FOLDER_NAME)
    if not eggFolder then
        self:_showNotification("Error: Egg folder not found in Workspace.")
        return
    end

    local eggs = eggFolder:GetChildren()
    if #eggs == 0 then
        self:_showNotification("No eggs found in the garden.")
        return
    end

    -- Create a display frame for the results
    local resultFrame = Instance.new("ScrollingFrame")
    resultFrame.Name = "EggPeekResults"
    resultFrame.Size = UDim2.new(1, -40, 1, -80)
    resultFrame.Position = UDim2.new(0.5, 0, 0, 50)
    resultFrame.AnchorPoint = Vector2.new(0.5, 0)
    resultFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    resultFrame.BorderSizePixel = 0
    resultFrame.CanvasSize = UDim2.new(0, 0, 0, 0) -- Will be updated by UIListLayout
    resultFrame.Parent = parentMenu
    createCorner(resultFrame, 6)

    local layout = Instance.new("UIListLayout")
    layout.Padding = UDim.new(0, 5)
    layout.Parent = resultFrame

    for _, eggModel in ipairs(eggs) do
        if eggModel:IsA("Model") then
            -- This is a big assumption. We assume there's a unique ID or attribute
            -- that links the workspace model to its data in ReplicatedStorage.
            -- Let's assume the model's name is the key.
            local eggName = eggModel.Name

            -- Try to find the corresponding data
            local eggData = ReplicatedStorage:FindFirstChildByPath(CONFIG.EGG_DATA_PATH .. "." .. eggName)
            local contains = "Unknown"

            if eggData then
                -- Another assumption: the data is a StringValue named 'Contains'
                local containsValue = eggData:FindFirstChild("Contains")
                if containsValue and containsValue:IsA("StringValue") then
                    contains = containsValue.Value
                end
            end

            -- Create a label for this egg's info
            local infoLabel = Instance.new("TextLabel")
            infoLabel.Name = eggName .. "Info"
            infoLabel.Text = string.format("Egg '%s' contains: %s", eggName, contains)
            infoLabel.Font = Enum.Font.SourceSans
            infoLabel.TextSize = 18
            infoLabel.TextColor3 = Color3.fromRGB(225, 225, 225)
            infoLabel.TextXAlignment = Enum.TextXAlignment.Left
            infoLabel.Size = UDim2.new(1, 0, 0, 30)
            infoLabel.BackgroundTransparency = 1
            infoLabel.Parent = resultFrame
        end
    end

    self:_showNotification(string.format("Found %d eggs.", #eggs))
end


--================================================================--
-- GUI Component Creation Methods
--================================================================--

function App:_showNotification(text)
    -- ... (Unchanged)
    local notificationFrame = Instance.new("Frame"); notificationFrame.Name = "Notification"; notificationFrame.AnchorPoint = Vector2.new(1, 1); notificationFrame.Position = UDim2.new(1, 20, 1, -20); notificationFrame.Size = UDim2.new(0, 250, 0, 60); notificationFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30); notificationFrame.BackgroundTransparency = 0.2; notificationFrame.ZIndex = 200; notificationFrame.Parent = self.screenGui; createCorner(notificationFrame, 8); local label = Instance.new("TextLabel"); label.Name = "NotificationLabel"; label.Size = UDim2.new(1, -20, 1, -10); label.Position = UDim2.new(0.5, 0, 0.5, 0); label.AnchorPoint = Vector2.new(0.5, 0.5); label.Text = text; label.Font = Enum.Font.SourceSans; label.TextSize = 16; label.TextColor3 = Color3.fromRGB(255, 255, 255); label.BackgroundTransparency = 1; label.Parent = notificationFrame; local tweenInfoIn = TweenInfo.new(0.4, Enum.EasingStyle.Quint, Enum.EasingDirection.Out); local tweenIn = TweenService:Create(notificationFrame, tweenInfoIn, {Position = UDim2.new(1, -20, 1, -20)}); local tweenInfoOut = TweenInfo.new(0.4, Enum.EasingStyle.Quint, Enum.EasingDirection.In); local tweenOut = TweenService:Create(notificationFrame, tweenInfoOut, {Position = UDim2.new(1, notificationFrame.AbsoluteSize.X + 20, 1, -20)}); tweenIn:Play(); task.wait(CONFIG.NOTIFICATION_DURATION); tweenOut:Play(); tweenOut.Completed:Connect(function() notificationFrame:Destroy() end)
end

function App:_createMenuSelection()
    -- ... (Unchanged)
    local selectionFrame = Instance.new("Frame"); selectionFrame.Name = "SelectionFrame"; selectionFrame.AnchorPoint = Vector2.new(0.5, 0.5); selectionFrame.Size = UDim2.new(0, 300, 0, 150); selectionFrame.Position = UDim2.new(0.5, 0, 0.5, 0); selectionFrame.BackgroundColor3 = Color3.fromRGB(25, 28, 41); selectionFrame.Visible = false; selectionFrame.Parent = self.screenGui; createCorner(selectionFrame, 8); local title = Instance.new("TextLabel"); title.Name = "Title"; title.Size = UDim2.new(1, 0, 0, 30); title.Text = "Select Menu"; title.TextColor3 = Color3.fromRGB(255, 255, 255); title.Font = Enum.Font.SourceSansBold; title.TextSize = 18; title.BackgroundTransparency = 1; title.Parent = selectionFrame; local freeButton = Instance.new("TextButton"); freeButton.Name = "FreeButton"; freeButton.Size = UDim2.new(0, 120, 0, 50); freeButton.Position = UDim2.new(0.5, -130, 0.5, -25); freeButton.Text = "Free Menu"; freeButton.Font = Enum.Font.SourceSansBold; freeButton.TextSize = 18; freeButton.BackgroundColor3 = Color3.fromRGB(50, 58, 82); freeButton.TextColor3 = Color3.fromRGB(255, 255, 255); freeButton.Parent = selectionFrame; createCorner(freeButton, 8); local premiumButton = Instance.new("TextButton"); premiumButton.Name = "PremiumButton"; premiumButton.Size = UDim2.new(0, 120, 0, 50); premiumButton.Position = UDim2.new(0.5, 10, 0.5, -25); premiumButton.Text = "Premium Menu"; premiumButton.Font = Enum.Font.SourceSansBold; premiumButton.TextSize = 18; premiumButton.BackgroundColor3 = Color3.fromRGB(255, 215, 0); premiumButton.TextColor3 = Color3.fromRGB(0, 0, 0); premiumButton.Parent = selectionFrame; createCorner(premiumButton, 8); return {frame = selectionFrame, freeButton = freeButton, premiumButton = premiumButton}
end

function App:_createDiscordBanner()
    -- ... (Unchanged)
    local discordFrame = Instance.new("Frame"); discordFrame.Name = "DiscordNotification"; discordFrame.AnchorPoint = Vector2.new(0.5, 0); discordFrame.Size = UDim2.new(0, 300, 0, 60); discordFrame.Position = UDim2.new(0.5, 0, 0, 10); discordFrame.BackgroundColor3 = Color3.fromRGB(25, 28, 41); discordFrame.Visible = false; discordFrame.Parent = self.screenGui; createCorner(discordFrame, 8); local title = Instance.new("TextLabel"); title.Size = UDim2.new(1, 0, 0.5, 0); title.Text = "Join our Discord!"; title.TextColor3 = Color3.fromRGB(255, 255, 255); title.Font = Enum.Font.SourceSansBold; title.TextSize = 18; title.BackgroundTransparency = 1; title.Parent = discordFrame; local link = Instance.new("TextButton"); link.Size = UDim2.new(0, 200, 0, 30); link.Position = UDim2.new(0.5, -100, 0.5, 0); link.Text = "Click to copy link"; link.Font = Enum.Font.SourceSans; link.TextSize = 16; link.BackgroundColor3 = Color3.fromRGB(88, 101, 242); link.TextColor3 = Color3.fromRGB(255, 255, 255); link.Parent = discordFrame; createCorner(link, 8); return {frame = discordFrame, link = link}
end

function App:_createReopenButton()
    -- ... (Unchanged)
    local reopenBtn = Instance.new("ImageButton"); reopenBtn.Name = "ReopenButton"; reopenBtn.Size = UDim2.new(0, 100, 0, 40); reopenBtn.AnchorPoint = Vector2.new(0.5, 0); reopenBtn.Position = UDim2.new(0.5, 0, 0, 20); reopenBtn.Image = CONFIG.REOPEN_BUTTON_IMAGE; reopenBtn.BackgroundTransparency = 1; reopenBtn.Visible = false; reopenBtn.ZIndex = 100; reopenBtn.Parent = self.screenGui; return reopenBtn
end

function App:_createMenuBase(title)
    local menuFrame = Instance.new("Frame"); menuFrame.Name = title:gsub("%s", "") .. "Frame"; menuFrame.AnchorPoint = Vector2.new(0.5, 0.5); menuFrame.Size = UDim2.new(0, 600, 0, 500); menuFrame.Position = UDim2.new(0.5, 0, 0.5, 0); menuFrame.BackgroundColor3 = Color3.fromRGB(25, 28, 41); menuFrame.Draggable = true; menuFrame.Active = true; menuFrame.Parent = self.screenGui; createCorner(menuFrame, 8)
    local titleBar = Instance.new("Frame"); titleBar.Name = "TitleBar"; titleBar.Size = UDim2.new(1, 0, 0, 30); titleBar.BackgroundColor3 = Color3.fromRGB(35, 38, 51); titleBar.Parent = menuFrame; createCorner(titleBar, 8)
    local titleLabel = Instance.new("TextLabel"); titleLabel.Name = "TitleLabel"; titleLabel.Size = UDim2.new(1, -30, 1, 0); titleLabel.Position = UDim2.new(0, 10, 0, 0); titleLabel.Text = title; titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255); titleLabel.Font = Enum.Font.SourceSansBold; titleLabel.TextSize = 18; titleLabel.TextXAlignment = Enum.TextXAlignment.Left; titleLabel.Parent = titleBar
    local minimizeButton = Instance.new("TextButton"); minimizeButton.Name = "MinimizeButton"; minimizeButton.Size = UDim2.new(0, 30, 1, 0); minimizeButton.Position = UDim2.new(1, -30, 0, 0); minimizeButton.Text = "_"; minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255); minimizeButton.BackgroundColor3 = titleBar.BackgroundColor3; minimizeButton.Font = Enum.Font.SourceSansBold; minimizeButton.TextSize = 24; minimizeButton.Parent = titleBar; createCorner(minimizeButton, 8)

    minimizeButton.MouseButton1Click:Connect(function()
        menuFrame.Visible = false
        if self.reopenButton then self.reopenButton.Visible = true end
    end)

    -- Add game-specific features if it's the free menu
    if title == "Free Menu" then
        local peekButton = Instance.new("TextButton")
        peekButton.Name = "PeekEggsButton"
        peekButton.Text = "Peek Eggs"
        peekButton.Size = UDim2.new(0, 120, 0, 40)
        peekButton.Position = UDim2.new(0, 20, 0, 50)
        peekButton.BackgroundColor3 = Color3.fromRGB(70, 70, 90)
        peekButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        peekButton.Font = Enum.Font.SourceSansBold
        peekButton.Parent = menuFrame
        createCorner(peekButton, 6)

        peekButton.MouseButton1Click:Connect(function()
            self:_peekEggsFeature(menuFrame)
        end)
    end

    return menuFrame
end

--================================================================--
-- Script Entry Point
--================================================================--

pcall(function()
    App.new()
end)
