--[[
    Script: WalvyXploit GUI
    Version: 3.1 (Draggable Image Button)
    Author: Walvy
    Description: A modular GUI script with a draggable image-based button to reopen the menu.
]]

--================================================================--
-- Service and Module Imports
--================================================================--

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

--================================================================--
-- Configuration
--================================================================--

local CONFIG = {
    DISCORD_INVITE_LINK = "https://discord.gg/your-invite-link",
    GUI_NAME = "WalvyXploitGui",
    REOPEN_BUTTON_IMAGE = "rbxassetid://138368756406672" -- Your Image ID
}

--================================================================--
-- Helper Functions
--================================================================--

local function safeSetClipboard(text)
    if typeof(setclipboard) == "function" then
        pcall(setclipboard, text)
    else
        warn("WalvyXploit: 'setclipboard' is not available in this environment.")
    end
end

local function createCorner(parent, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius)
    corner.Parent = parent
end

--================================================================--
-- Main Application Module
--================================================================--

local App = {}
App.__index = App

function App.new()
    local self = setmetatable({}, App)

    self.lastActiveMenu = nil
    self.localPlayer = Players.LocalPlayer

    if not self.localPlayer then
        warn("WalvyXploit: Could not find LocalPlayer. Aborting script.")
        return nil
    end

    local playerGui = self.localPlayer:WaitForChild("PlayerGui")
    if not playerGui then
        warn("WalvyXploit: Could not find PlayerGui. Aborting script.")
        return nil
    end

    self.screenGui = Instance.new("ScreenGui")
    self.screenGui.Name = CONFIG.GUI_NAME
    self.screenGui.ResetOnSpawn = false
    self.screenGui.Parent = playerGui

    self:_setupUI()

    print("WalvyXploit GUI Loaded (v3.1).")
    return self
end

function App:_setupUI()
    local menuSelection = self:_createMenuSelection()
    local discordBanner = self:_createDiscordBanner()
    local reopenButton = self:_createReopenButton()

    menuSelection.frame.Visible = true
    discordBanner.frame.Visible = true

    local function openMenuFromButton()
        if self.lastActiveMenu and self.lastActiveMenu.Parent then
            self.lastActiveMenu.Visible = true
        end
        reopenButton.Visible = false
    end

    -- Connect Events
    menuSelection.freeButton.MouseButton1Click:Connect(function()
        menuSelection.frame:Destroy()
        discordBanner.frame:Destroy()
        self.lastActiveMenu = self:_createMenuBase("Free Menu", reopenButton)
    end)

    menuSelection.premiumButton.MouseButton1Click:Connect(function()
        menuSelection.frame:Destroy()
        discordBanner.frame:Destroy()
        self.lastActiveMenu = self:_createMenuBase("Premium Menu", reopenButton)
    end)

    discordBanner.link.MouseButton1Click:Connect(function()
        safeSetClipboard(CONFIG.DISCORD_INVITE_LINK)
        discordBanner.frame:Destroy()
    end)

    -- Reopen button logic is now split into drag and click
    self:_setupDraggableButton(reopenButton, openMenuFromButton)
end

--- Sets up the dragging and click logic for the reopen button.
-- @param button ImageButton | The button to make draggable.
-- @param onClick function | The function to call when the button is clicked (not dragged).
function App:_setupDraggableButton(button, onClick)
    local dragging = false
    local dragStart = nil
    local startPos = nil
    local dragThreshold = 5 -- Pixels the mouse must move before it's considered a drag

    button.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = button.Position

            -- Prevent Roblox's default UI drag behavior
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    button.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - dragStart
            button.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)

    button.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            local dragDistance = (input.Position - dragStart).Magnitude
            if dragDistance < dragThreshold then
                -- If it moved less than the threshold, it's a click
                onClick()
            end
            dragging = false
        end
    end)
end


--================================================================--
-- GUI Component Creation Methods
--================================================================--

function App:_createMenuSelection()
    local selectionFrame = Instance.new("Frame"); selectionFrame.Name = "SelectionFrame"; selectionFrame.AnchorPoint = Vector2.new(0.5, 0.5); selectionFrame.Size = UDim2.new(0, 300, 0, 150); selectionFrame.Position = UDim2.new(0.5, 0, 0.5, 0); selectionFrame.BackgroundColor3 = Color3.fromRGB(25, 28, 41); selectionFrame.Visible = false; selectionFrame.Parent = self.screenGui; createCorner(selectionFrame, 8)
    local title = Instance.new("TextLabel"); title.Name = "Title"; title.Size = UDim2.new(1, 0, 0, 30); title.Text = "Select Menu"; title.TextColor3 = Color3.fromRGB(255, 255, 255); title.Font = Enum.Font.SourceSansBold; title.TextSize = 18; title.BackgroundTransparency = 1; title.Parent = selectionFrame
    local freeButton = Instance.new("TextButton"); freeButton.Name = "FreeButton"; freeButton.Size = UDim2.new(0, 120, 0, 50); freeButton.Position = UDim2.new(0.5, -130, 0.5, -25); freeButton.Text = "Free Menu"; freeButton.Font = Enum.Font.SourceSansBold; freeButton.TextSize = 18; freeButton.BackgroundColor3 = Color3.fromRGB(50, 58, 82); freeButton.TextColor3 = Color3.fromRGB(255, 255, 255); freeButton.Parent = selectionFrame; createCorner(freeButton, 8)
    local premiumButton = Instance.new("TextButton"); premiumButton.Name = "PremiumButton"; premiumButton.Size = UDim2.new(0, 120, 0, 50); premiumButton.Position = UDim2.new(0.5, 10, 0.5, -25); premiumButton.Text = "Premium Menu"; premiumButton.Font = Enum.Font.SourceSansBold; premiumButton.TextSize = 18; premiumButton.BackgroundColor3 = Color3.fromRGB(255, 215, 0); premiumButton.TextColor3 = Color3.fromRGB(0, 0, 0); premiumButton.Parent = selectionFrame; createCorner(premiumButton, 8)
    return {frame = selectionFrame, freeButton = freeButton, premiumButton = premiumButton}
end

function App:_createDiscordBanner()
    local discordFrame = Instance.new("Frame"); discordFrame.Name = "DiscordNotification"; discordFrame.AnchorPoint = Vector2.new(0.5, 0); discordFrame.Size = UDim2.new(0, 300, 0, 60); discordFrame.Position = UDim2.new(0.5, 0, 0, 10); discordFrame.BackgroundColor3 = Color3.fromRGB(25, 28, 41); discordFrame.Visible = false; discordFrame.Parent = self.screenGui; createCorner(discordFrame, 8)
    local title = Instance.new("TextLabel"); title.Size = UDim2.new(1, 0, 0.5, 0); title.Text = "Join our Discord!"; title.TextColor3 = Color3.fromRGB(255, 255, 255); title.Font = Enum.Font.SourceSansBold; title.TextSize = 18; title.BackgroundTransparency = 1; title.Parent = discordFrame
    local link = Instance.new("TextButton"); link.Size = UDim2.new(0, 200, 0, 30); link.Position = UDim2.new(0.5, -100, 0.5, 0); link.Text = "Click to copy link"; link.Font = Enum.Font.SourceSans; link.TextSize = 16; link.BackgroundColor3 = Color3.fromRGB(88, 101, 242); link.TextColor3 = Color3.fromRGB(255, 255, 255); link.Parent = discordFrame; createCorner(link, 8)
    return {frame = discordFrame, link = link}
end

--- Creates the button to reopen a minimized menu.
function App:_createReopenButton()
    local reopenBtn = Instance.new("ImageButton")
    reopenBtn.Name = "ReopenButton"
    reopenBtn.Size = UDim2.new(0, 60, 0, 60) -- Square size for a logo
    reopenBtn.Position = UDim2.new(0, 20, 0, 20) -- Default position top-left
    reopenBtn.Image = CONFIG.REOPEN_BUTTON_IMAGE
    reopenBtn.BackgroundTransparency = 1
    reopenBtn.Visible = false
    reopenBtn.Parent = self.screenGui
    return reopenBtn
end

function App:_createMenuBase(title, reopenButton)
    local menuFrame = Instance.new("Frame"); menuFrame.Name = title:gsub("%s", "") .. "Frame"; menuFrame.AnchorPoint = Vector2.new(0.5, 0.5); menuFrame.Size = UDim2.new(0, 600, 0, 500); menuFrame.Position = UDim2.new(0.5, 0, 0.5, 0); menuFrame.BackgroundColor3 = Color3.fromRGB(25, 28, 41); menuFrame.Draggable = true; menuFrame.Active = true; menuFrame.Parent = self.screenGui; createCorner(menuFrame, 8)
    local titleBar = Instance.new("Frame"); titleBar.Name = "TitleBar"; titleBar.Size = UDim2.new(1, 0, 0, 30); titleBar.BackgroundColor3 = Color3.fromRGB(35, 38, 51); titleBar.Parent = menuFrame; createCorner(titleBar, 8)
    local titleLabel = Instance.new("TextLabel"); titleLabel.Name = "TitleLabel"; titleLabel.Size = UDim2.new(1, -60, 1, 0); titleLabel.Position = UDim2.new(0, 10, 0, 0); titleLabel.Text = title; titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255); titleLabel.Font = Enum.Font.SourceSansBold; titleLabel.TextSize = 18; titleLabel.TextXAlignment = Enum.TextXAlignment.Left; titleLabel.Parent = titleBar
    local minimize = Instance.new("TextButton"); minimize.Name = "MinimizeButton"; minimize.Size = UDim2.new(0, 30, 1, 0); minimize.Position = UDim2.new(1, -60, 0, 0); minimize.Text = "—"; minimize.TextColor3 = Color3.fromRGB(255, 255, 255); minimize.BackgroundColor3 = titleBar.BackgroundColor3; minimize.Font = Enum.Font.SourceSansBold; minimize.TextSize = 24; minimize.Parent = titleBar; createCorner(minimize, 8)
    local close = Instance.new("TextButton"); close.Name = "CloseButton"; close.Size = UDim2.new(0, 30, 1, 0); close.Position = UDim2.new(1, -30, 0, 0); close.Text = "✕"; close.TextColor3 = Color3.fromRGB(255, 255, 255); close.BackgroundColor3 = Color3.fromRGB(180, 0, 0); close.Font = Enum.Font.SourceSansBold; close.TextSize = 20; close.Parent = titleBar; createCorner(close, 8)

    minimize.MouseButton1Click:Connect(function()
        menuFrame.Visible = false
        if reopenButton then reopenButton.Visible = true end
    end)
    close.MouseButton1Click:Connect(function()
        self.screenGui:Destroy()
    end)

    return menuFrame
end

--================================================================--
-- Script Entry Point
--================================================================--

pcall(function()
    App.new()
end)
